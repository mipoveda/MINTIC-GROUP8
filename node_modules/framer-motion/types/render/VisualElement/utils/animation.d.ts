import { VisualElement } from "framer-motion/types/render/VisualElement";
import { VariantLabels, TargetAndTransition, Transition } from "framer-motion";
import { Target, TargetResolver, TargetWithKeyframes, Variant } from "framer-motion/types/types";
export declare type AnimationDefinition = VariantLabels | TargetAndTransition | TargetResolver;
declare type AnimationOptions = {
    delay?: number;
    priority?: number;
    transitionOverride?: Transition;
    custom?: any;
};
export declare type MakeTargetAnimatable = (visualElement: VisualElement, target: TargetWithKeyframes, origin?: Target, transitionEnd?: Target) => {
    target: TargetWithKeyframes;
    transitionEnd?: Target;
};
/**
 * @internal
 */
export declare function startVisualElementAnimation(visualElement: VisualElement, definition: AnimationDefinition, opts?: AnimationOptions): Promise<void>;
export declare function stopAnimation(visualElement: VisualElement): void;
export declare function animateTarget(visualElement: VisualElement, definition: Variant, { delay, priority, transitionOverride, custom, }?: AnimationOptions): Promise<any>;
export {};
