import * as React from "react";
import { MotionProps } from "framer-motion/types/motion/types";
import { MotionConfigContext } from "framer-motion/types/motion/context/MotionConfigContext";
import { VisualElement } from "framer-motion/types/render/VisualElement";
import { HTMLVisualElement } from "framer-motion/types/render/dom/HTMLVisualElement";
/**
 * @public
 */
export interface FeatureProps extends MotionProps {
    visualElement: HTMLVisualElement;
}
/**
 * @public
 */
export interface MotionFeature {
    key: string;
    shouldRender: (props: MotionProps) => boolean;
    getComponent: (props: MotionProps) => React.ComponentType<FeatureProps> | undefined;
}
export declare type LoadMotionFeatures<P = {}> = (visualElenent: VisualElement, props: P & MotionProps, inherit: boolean, plugins: MotionConfigContext) => React.ReactElement<FeatureProps>[];
export declare type RenderComponent<P = {}> = (Component: string | React.ComponentType<P>, props: MotionProps, visualElement: VisualElement) => any;
